Index: linux-4.1.52/net/netfilter/nf_conntrack_core.c
===================================================================
--- linux-4.1.52.orig/net/netfilter/nf_conntrack_core.c	2020-03-17 10:08:48.973388518 +0000
+++ linux-4.1.52/net/netfilter/nf_conntrack_core.c	2020-03-17 10:14:54.257385035 +0000
@@ -141,6 +141,11 @@
 
 unsigned int nf_conntrack_hash_rnd __read_mostly;
 EXPORT_SYMBOL_GPL(nf_conntrack_hash_rnd);
+
+#ifdef CONFIG_ZYXEL_NF_SESSION_RSV
+unsigned int nf_session_reserve __read_mostly; /* Location in /proc/sys/net/netfilter/nf_session_reserve */
+EXPORT_SYMBOL_GPL(nf_session_reserve);
+#endif
 #ifdef CONFIG_ZYXEL_NF_SESSION_CTL//__ZYXEL__, Chi-Hsiang /proc/net/nf_session_ctl
 //unsigned  int nf_session_ctl_max = 2048  __read_mostly;;	/*setup with /proc/sys/net/netfilter/ */
 unsigned  int nf_session_ctl_max __read_mostly;
@@ -1373,6 +1378,29 @@
 #endif
 	}
 
+#if defined(CONFIG_BCM_KF_NETFILTER) && defined(CONFIG_ZYXEL_NF_SESSION_RSV)
+	/* ZYXEL - Session Reservation judgement function                    */
+	/* Session Reservation -                                             */
+	/*   Drop lan(from br0) flow when                                    */
+	/*   total connection track reaches to 90% of max connection track.  */
+	/* Session Reservation run time flag - nf_session_reserve            */
+	/*   1 - Session Reservation on, set by default.                     */
+	/*   0 - Session Reservation off.                                    */
+	if (nf_conntrack_max &&
+	      unlikely(atomic_read(&net->ct.count) > (nf_conntrack_max*9/10)) &&
+		  skb->dev != NULL &&
+		  !strncmp(skb->dev->name, "br", 2)) {
+		if (nf_session_reserve) {
+			/* Sorry, we have to kick LRU out regardlessly. */
+			if (!regardless_drop(net, skb)) {
+				atomic_dec(&net->ct.count);
+				net_warn_ratelimited("nf_conntrack: total connection track reaches to 90 percent of max connection track , dropping lan(brx) packet\n");
+				return ERR_PTR(-ENOMEM);
+			}
+		}
+	}
+#endif
+
 #ifdef CONFIG_ZYXEL_NF_SESSION_CTL
 	/*	== ZYXEL, Session_Control max num judgement function. /proc/net/nf_session_ctl ==*/
 	/*		0					session max number						*/
@@ -2451,6 +2479,9 @@
 #ifdef CONFIG_ZYXEL_NF_SESSION_CTL//__ZYXEL__, Chi-Hsiang /proc/net/nf_session_ctl
 	nf_session_ctl_max =2048;
 #endif
+#ifdef CONFIG_ZYXEL_NF_SESSION_RSV
+	nf_session_reserve = 1;
+#endif
 
 	for (i = 0; i < CONNTRACK_LOCKS; i++)
 		spin_lock_init(&nf_conntrack_locks[i]);
Index: linux-4.1.52/include/net/netfilter/nf_conntrack.h
===================================================================
--- linux-4.1.52.orig/include/net/netfilter/nf_conntrack.h	2020-03-17 10:08:48.973388518 +0000
+++ linux-4.1.52/include/net/netfilter/nf_conntrack.h	2020-03-17 10:08:49.449388514 +0000
@@ -386,6 +386,9 @@
 #ifdef CONFIG_ZYXEL_NF_SESSION_CTL//__ZYXEL__, Chi-Hsiang /proc/net/nf_session_ctl
 extern unsigned int nf_session_ctl_max;
 #endif
+#ifdef CONFIG_ZYXEL_NF_SESSION_RSV
+extern unsigned int nf_session_reserve;
+#endif
 extern unsigned int nf_conntrack_hash_rnd;
 void init_nf_conntrack_hash_rnd(void);
 
Index: linux-4.1.52/net/netfilter/nf_conntrack_standalone.c
===================================================================
--- linux-4.1.52.orig/net/netfilter/nf_conntrack_standalone.c	2020-03-17 10:08:49.033388518 +0000
+++ linux-4.1.52/net/netfilter/nf_conntrack_standalone.c	2020-03-17 10:08:49.449388514 +0000
@@ -753,6 +753,15 @@
 		.proc_handler	= proc_dointvec,
 	},
 #endif
+#ifdef CONFIG_ZYXEL_NF_SESSION_RSV
+	{
+		.procname	= "nf_session_reserve",
+		.data		= &nf_session_reserve,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= proc_dointvec,
+	},
+#endif
 	{
 		.procname	= "nf_conntrack_expect_max",
 		.data		= &nf_ct_expect_max,
Index: linux-4.1.52/Kconfig.zyxel
===================================================================
--- linux-4.1.52.orig/Kconfig.zyxel	2020-03-17 10:08:49.077388517 +0000
+++ linux-4.1.52/Kconfig.zyxel	2020-03-17 10:08:49.449388514 +0000
@@ -2,6 +2,9 @@
 # For ZYXEL Kernel Compile Flags.
 #
 
+config ZYXEL_NF_SESSION_RSV
+        bool "ZyXEL feature - netfilter session reserve"
+
 config ZYXEL_NF_SESSION_CTL
         bool "ZyXEL feature - netfilter session control"
 
