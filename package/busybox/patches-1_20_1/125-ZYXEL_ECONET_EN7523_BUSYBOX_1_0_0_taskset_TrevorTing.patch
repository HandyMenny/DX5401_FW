Index: busybox-1_20_1/miscutils/taskset.c
===================================================================
--- busybox-1_20_1.orig/miscutils/taskset.c	2021-07-06 10:29:17.998635000 +0800
+++ busybox-1_20_1/miscutils/taskset.c	2021-07-06 10:32:47.242635000 +0800
@@ -78,6 +78,19 @@
 }
 #endif
 
+#if defined(TCSUPPORT_CPU_EN7523) || defined(TCSUPPORT_CPU_EN7580)
+/* ZYXEL, ref. EN7523SDK 7.3.267.750 busybox 1.00 modification, 20210705 */
+int blapi_system_cpu_remap_taskset(unsigned long *mask)
+{
+	unsigned long temp_mask = 0;
+	if ((*mask & 0xC) != 0)
+		temp_mask |= 0x2;
+	if ((*mask & 0x3) != 0)
+		temp_mask |= 0x1;
+	*mask = temp_mask;
+	return 0;
+}
+#endif
 
 int taskset_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int taskset_main(int argc UNUSED_PARAM, char **argv)
@@ -135,6 +148,10 @@
 		unsigned long long m = xstrtoull_range(aff, 0, 1, ULLONG_MAX);
 		enum { CNT_BIT = CPU_SETSIZE < sizeof(m)*8 ? CPU_SETSIZE : sizeof(m)*8 };
 
+#if defined(TCSUPPORT_CPU_EN7523) || defined(TCSUPPORT_CPU_EN7580)
+		/* ZYXEL, ref. EN7523SDK 7.3.267.750 busybox 1.00 modification, 20210705 */
+		blapi_system_cpu_remap_taskset(&m);
+#endif
 		CPU_ZERO(&mask);
 		for (i = 0; i < CNT_BIT; i++) {
 			unsigned long long bit = (1ULL << i);
