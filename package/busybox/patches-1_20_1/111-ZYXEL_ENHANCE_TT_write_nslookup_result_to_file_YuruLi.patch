Index: busybox-1_20_1/networking/nslookup.c
===================================================================
--- busybox-1_20_1.orig/networking/nslookup.c	2020-05-27 13:31:51.562813031 +0800
+++ busybox-1_20_1/networking/nslookup.c	2020-05-27 13:32:56.998384822 +0800
@@ -249,7 +249,7 @@
 int nslookup_main(int argc, char **argv)
 {
 #ifdef ZCFG_SUPPORT
-	char *server = NULL, *hostname = NULL;
+	char *server = NULL, *hostname = NULL, *file = NULL;
 	unsigned int nscount = 1, deadline = 1000;
 	char *str_I = NULL;
 	int opt;
@@ -262,6 +262,7 @@
 	int c = 0, successc = 0;
 	char cStr[4] = {0};
 	char syscmd[128] = {0};
+	bool setStatus = false;
 	
 	zcfgEidInit(ZCFG_EID_NSLOOKUP, NULL);
 #endif
@@ -276,7 +277,7 @@
 		return EXIT_FAILURE;
 	}
 	
-	while((opt = getopt(argc, argv, "h:s:c:w:I:")) != -1)
+	while((opt = getopt(argc, argv, "h:s:c:w:I:f:")) != -1)
 	{
 		switch(opt)
 		{
@@ -295,6 +296,9 @@
 			case 'I': /*not yet support now*/
 				str_I= optarg;
 				break;
+			case 'f':
+				file= optarg;
+				break;
 			default:
 				break;
 		}
@@ -322,19 +326,28 @@
 		set_default_dns(server);	
 
 	ret = server_print(srvip);
-		
+
+#if 0 //?
 	if (server){
 		/*work around, because the server option not work ?*/
 		snprintf(syscmd, sizeof(syscmd),"echo nameserver %s >> /var/fyi/sys/dns", srvip);
 		system(syscmd);
 	}
+#endif
 	
 	if(ret != 0){
 		json_object_object_add(lookup_stat, "DiagnosticsState", json_object_new_string(DIAG_DNS_SERVER_NOT_RESOLVE));
 		json_object_object_add(lookup_stat, "SuccessCount", json_object_new_int(0));
-		payload = json_object_to_json_string(lookup_stat);		
-		payloadLen = strlen(payload) + 1;
-		nslookupMsgSend(ZCFG_MSG_NSLOOKUP_MSG, payloadLen, payload);
+
+		if(file != NULL){
+			printf("lookup_stat=%s\n", json_object_to_json_string(lookup_stat));
+			json_object_to_file(file, lookup_stat);
+		}
+		else{
+			payload = json_object_to_json_string(lookup_stat);		
+			payloadLen = strlen(payload) + 1;
+			nslookupMsgSend(ZCFG_MSG_NSLOOKUP_MSG, payloadLen, payload);
+		}
 		json_object_put(lookup_stat);
 		
 		return EXIT_SUCCESS;
@@ -364,13 +377,25 @@
 
 		if(!ret){
 			json_object_object_add(lookup_result, "Status", json_object_new_string(DIAG_SUCCESS));
+			if(!setStatus){
+				json_object_object_add(lookup_stat, "Status", json_object_new_string(DIAG_SUCCESS));
+				setStatus = true;
+			}
 		}
 		else{
 			if((deadline>0) && ((timevale - timevals) >= deadline)){
 				json_object_object_add(lookup_result, "Status", json_object_new_string(DIAG_TIMEOUT));
+				if(!setStatus){
+					json_object_object_add(lookup_stat, "Status", json_object_new_string(DIAG_TIMEOUT));
+					setStatus = true;
+				}
 			}	
 			else{
 				json_object_object_add(lookup_result, "Status", json_object_new_string(DIAG_HOST_NAME_NOT_RESOLV));
+				if(!setStatus){
+					json_object_object_add(lookup_stat, "Status", json_object_new_string(DIAG_HOST_NAME_NOT_RESOLV));
+					setStatus = true;
+				}
 			}
 			sprintf(cStr,"%d", c);
 			json_object_object_add(lookup_stat, cStr, lookup_result);
@@ -384,10 +409,22 @@
 
 	json_object_object_add(lookup_stat, "DiagnosticsState", json_object_new_string(DIAG_COMPLETE));
 	json_object_object_add(lookup_stat, "SuccessCount", json_object_new_int(successc));
+	if(successc > 0){
+		json_object_object_add(lookup_stat, "Status", json_object_new_string(DIAG_SUCCESS));
+	}
+	else if(!setStatus){
+		json_object_object_add(lookup_stat, "Status", json_object_new_string(DIAG_TIMEOUT));
+	}
 
-	payload = json_object_to_json_string(lookup_stat);
-	payloadLen = strlen(payload) + 1;
-	nslookupMsgSend(ZCFG_MSG_NSLOOKUP_MSG, payloadLen, payload);
+	if(file != NULL){
+		printf("lookup_stat=%s\n", json_object_to_json_string(lookup_stat));
+		json_object_to_file(file, lookup_stat);
+	}
+	else{
+		payload = json_object_to_json_string(lookup_stat);
+		payloadLen = strlen(payload) + 1;
+		nslookupMsgSend(ZCFG_MSG_NSLOOKUP_MSG, payloadLen, payload);
+	}
 	json_object_put(lookup_stat);
 
 	return EXIT_SUCCESS;
Index: busybox-1_20_1/networking/ping.c
===================================================================
--- busybox-1_20_1.orig/networking/ping.c	2020-05-27 13:31:52.146813043 +0800
+++ busybox-1_20_1/networking/ping.c	2020-05-27 13:31:52.422813048 +0800
@@ -322,7 +322,7 @@
 
 /* Full(er) version */
 
-#define OPT_STRING ("qvc:s:t:w:W:I:4" IF_PING6("6"))
+#define OPT_STRING ("qvc:s:t:w:W:I:zf:4" IF_PING6("6"))
 enum {
 	OPT_QUIET = 1 << 0,
 	OPT_VERBOSE = 1 << 1,
@@ -332,8 +332,10 @@
 	OPT_w = 1 << 5,
 	OPT_W = 1 << 6,
 	OPT_I = 1 << 7,
-	OPT_IPV4 = 1 << 8,
-	OPT_IPV6 = (1 << 9) * ENABLE_PING6,
+	OPT_z = 1 << 8,
+	OPT_f = 1 << 9,
+	OPT_IPV4 = 1 << 10,
+	OPT_IPV6 = (1 << 11) * ENABLE_PING6,
 };
 
 
@@ -368,11 +370,13 @@
 #ifdef ZCFG_SUPPORT
 	int pingsvrs, pings;
 	int nhost;
+	int sendzcfgmsg;
 	unsigned timeoutstart;
 	unsigned svrstmin, svrstmax, svrstavg;
 	char pingsdiagstat[100];
 	char diagstat[100];
 	char svrhostname[257];
+	char *jsonfilename;
 #endif
 } FIX_ALIASING;
 #define G (*(struct globals*)&bb_common_bufsiz1)
@@ -398,6 +402,7 @@
 #define pingaddr     (G.pingaddr    )
 #define rcvd_tbl     (G.rcvd_tbl    )
 #ifdef ZCFG_SUPPORT
+#define sendzcfgmsg (G.sendzcfgmsg)
 #define timeoutstart (G.timeoutstart)
 #define pings        (G.pings       )
 #define pingsdiagstat (G.pingsdiagstat)
@@ -409,6 +414,7 @@
 #define svrstavg     (G.svrstavg    )
 #define pingsvrs     (G.pingsvrs    )
 #define svrhostname  (G.svrhostname )
+#define jsonfilename (G.jsonfilename)
 #endif
 
 void BUG_ping_globals_too_big(void);
@@ -419,6 +425,7 @@
 	datalen = DEFDATALEN; \
 	timeout = MAXWAIT; \
 	tmin = UINT_MAX; \
+	jsonfilename = NULL; \
 } while (0)
 
 
@@ -555,6 +562,10 @@
 	else{
 		if(strstr(diagstat, "Error")){
 			json_object_object_add(ping_stat, "DiagnosticsState", json_object_new_string(diagstat));
+			if(!sendzcfgmsg){ //TT Customization
+				json_object_object_add(ping_stat, "SuccessCount", json_object_new_int(0));
+				json_object_object_add(ping_stat, "FailureCount", json_object_new_int(0));
+			}
 		}else{
 			json_object_object_add(ping_stat, "DiagnosticsState", json_object_new_string(DIAG_COMPLETE));
 			json_object_object_add(ping_stat, "SuccessCount", json_object_new_int(recv_count));
@@ -576,14 +587,20 @@
 
 	payloadLen = strlen(payload);
 
-	if(pings){
-		pingMsgSend(ZCFG_MSG_PINGSVRS_RST, payloadLen, payload);
-	}else if(pingsvrs && !strcmp(pingsdiagstat, "pings_complete")){
-		pingMsgSend(ZCFG_MSG_PINGSVRS_RST, payloadLen, payload);
-	}else
-		pingMsgSend(ZCFG_MSG_PING_MSG, payloadLen, payload);
+	if(sendzcfgmsg){
+		if(pings){
+			pingMsgSend(ZCFG_MSG_PINGSVRS_RST, payloadLen, payload);
+		}else if(pingsvrs && !strcmp(pingsdiagstat, "pings_complete")){
+			pingMsgSend(ZCFG_MSG_PINGSVRS_RST, payloadLen, payload);
+		}else
+			pingMsgSend(ZCFG_MSG_PING_MSG, payloadLen, payload);
+	}
+	else if(jsonfilename != NULL){
+		json_object_to_file(jsonfilename, ping_stat);
+	}
 
 	json_object_put(ping_stat);
+	
 #endif
 	/* if condition is true, exit with 1 -- 'failure' */
 	exit(nreceived == 0 || (deadline && nreceived < pingcount));
@@ -1221,7 +1238,7 @@
 
 	/* exactly one argument needed; -v and -q don't mix; -c NUM, -t NUM, -w NUM, -W NUM */
 	opt_complementary = "=1:q--v:v--q:c+:t+:w+:W+";
-	opt |= getopt32(argv, OPT_STRING, &pingcount, &str_s, &opt_ttl, &deadline, &timeout, &str_I);
+	opt |= getopt32(argv, OPT_STRING, &pingcount, &str_s, &opt_ttl, &deadline, &timeout, &str_I, &jsonfilename);
 	if (opt & OPT_s)
 		datalen = xatou16(str_s); // -s
 	if (opt & OPT_I) { // -I
@@ -1232,6 +1249,13 @@
 			str_I = NULL; /* don't try to bind to device later */
 		}
 	}
+	if (opt & OPT_z) { // -z
+		sendzcfgmsg = 0;
+	}
+	else{
+		sendzcfgmsg = 1;
+	}
+		
 	if(timeout == 0){
 		timeout = 1;
 	}
