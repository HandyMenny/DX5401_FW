Index: wide-dhcpv6-20080615/dhcp6c.c
===================================================================
--- wide-dhcpv6-20080615.orig/dhcp6c.c
+++ wide-dhcpv6-20080615/dhcp6c.c
@@ -1962,6 +1962,7 @@ dprintf(LOG_ERR, FNAME, "client6_recvadv
 	struct dhcp6_event *ev;
 	struct dhcp6_eventdata *evd;
 	struct authparam *authparam = NULL, authparam0;
+	int have_ia = -1;
 
 	/* find the corresponding event based on the received xid */
 	ev = find_event_withid(ifp, ntohl(dh6->dh6_xid) & DH6_XIDMASK);
@@ -2018,8 +2019,8 @@ dprintf(LOG_ERR, FNAME, "client6_recvadv
 	 * We only apply this when we are going to request an address or
 	 * a prefix.
 	 */
-	for (evd = TAILQ_FIRST(&ev->data_list); evd;
-	    evd = TAILQ_NEXT(evd, link)) {
+	for (evd = TAILQ_FIRST(&ev->data_list); evd; evd = TAILQ_NEXT(evd, link)) {
+		struct dhcp6_listval *lv, *slv;
 		u_int16_t stcode;
 		char *stcodestr;
 		struct dhcp6_listval *iav=NULL, *siav=NULL;
@@ -2038,6 +2039,7 @@ dprintf(LOG_ERR, FNAME, "client6_recvadv
 		default:
 			continue;
 		}
+
 		if (dhcp6_find_listval(&optinfo->stcode_list,
 		    DHCP6_LISTVAL_STCODE, &stcode, 0)) {
 			dprintf(LOG_INFO, FNAME,
@@ -2046,69 +2048,38 @@ dprintf(LOG_ERR, FNAME, "client6_recvadv
 		}
 
 		/*
-		 * Peter: ReadyLogo
-		 * RFC3315
-		 *   17.1.3. Receipt of Advertise Messages
-		 *
-		 * The client MUST ignore any Advertise message that includes a Status
-		 * Code option containing the value NoAddrsAvail.
-  		 */
-#ifndef ZYXEL_WAN_DHCPV6_MODE 
-		if (evd->type == DHCP6_EVDATA_IANA) {
-			iaparam.iaid = 0;
-			for (iac = TAILQ_FIRST(&ifp->iaconf_list); 
-				iac; iac = TAILQ_NEXT(iac, link)) 
-			{
-				if (iac->type == IATYPE_NA) {
-					iaparam.iaid = iac->iaid;
-					break;
-				} 
-			}
+		 * Ignore advertise messages with none of requested data and missed status codes.
+		 * Except of 041-ZYXEL_ENHANCE_advertMsg_addr_prefix_can_be_null_Andy.patch
+		 */
+#ifndef ZYXEL_WAN_DHCPV6_MODE
+		if (have_ia > 0 || TAILQ_EMPTY((struct dhcp6_list *)evd->data))
+			continue;
 
-			if ( 	(iaparam.iaid)
-				&&
-				(iav = dhcp6_find_listval(&optinfo->iana_list, 
-				DHCP6_LISTVAL_IANA, &iaparam, 0)) ) 
-			{ 
-				for (siav = TAILQ_FIRST(&iav->sublist); siav; 
-					siav = TAILQ_NEXT(siav, link)) 
-				{
-					if ( 	(siav->type == DHCP6_LISTVAL_STCODE) 
-						&& 
-						(siav->val_num16 == DH6OPT_STCODE_NOADDRSAVAIL) ) 
-					{
-					    dprintf(LOG_INFO, FNAME, "DH6OPT_STCODE_NOADDRSAVAIL");
-						return (-1);
+		have_ia = 0;
+		/* parse list of IA_PD */
+		if (evd->type == DHCP6_EVDATA_IAPD) {
+			TAILQ_FOREACH(lv, (struct dhcp6_list *)evd->data, link) {
+				slv = dhcp6_find_listval(&optinfo->iapd_list, DHCP6_LISTVAL_IAPD, &lv->val_ia, 0);
+				if (slv == NULL)
+					continue;
+				TAILQ_FOREACH(slv, &slv->sublist, link) {
+					if (slv->type == DHCP6_LISTVAL_PREFIX6) {
+						have_ia = 1;
+						break;
 					}
-				}	
-			}	
-		}
-		else if (evd->type == DHCP6_EVDATA_IAPD) {
-			//Peter: need to be added in the future....
-			//WenHsien: here I am....
-			iaparam.iaid = 0;
-			for (iac = TAILQ_FIRST(&ifp->iaconf_list);
-				iac; iac = TAILQ_NEXT(iac, link))
-			{
-				if (iac->type == IATYPE_PD) {
-					iaparam.iaid = iac->iaid;
-					break;
 				}
 			}
-			if ( 	(iaparam.iaid)
-				&&
-				(iav = dhcp6_find_listval(&optinfo->iapd_list,
-						DHCP6_LISTVAL_IAPD, &iaparam, 0)) )
-			{
-				for (siav = TAILQ_FIRST(&iav->sublist); siav;
-					siav = TAILQ_NEXT(siav, link))
-				{
-					if ( 	(siav->type == DHCP6_LISTVAL_STCODE)
-						&&
-						(siav->val_num16 == DH6OPT_STCODE_NOPREFIXAVAIL) )
-					{
-						dprintf(LOG_INFO, FNAME, "DH6OPT_STCODE_NOPREFIXAVAIL");
-						return (-1);
+		}
+		/* parse list of IA_NA */
+		if (evd->type == DHCP6_EVDATA_IANA) {
+			TAILQ_FOREACH(lv, (struct dhcp6_list *)evd->data, link) {
+				slv = dhcp6_find_listval(&optinfo->iana_list, DHCP6_LISTVAL_IANA, &lv->val_ia, 0);
+				if (slv == NULL)
+					continue;
+				TAILQ_FOREACH(slv, &slv->sublist, link) {
+					if (slv->type == DHCP6_LISTVAL_STATEFULADDR6) {
+						have_ia = 1;
+						break;
 					}
 				}
 			}
@@ -2116,6 +2087,11 @@ dprintf(LOG_ERR, FNAME, "client6_recvadv
 #endif
 	}
 
+	if (have_ia == 0) {
+		dprintf(LOG_INFO, FNAME, "advertise contains no address/prefix");
+		return (-1);
+	}
+
 	if (ev->state != DHCP6S_SOLICIT ||
 	    (ifp->send_flags & DHCIFF_RAPID_COMMIT) || infreq_mode) {
 		/*
