Index: mtd-utils-2.0.2/nand-utils/nanddump.c
===================================================================
--- mtd-utils-2.0.2.orig/nand-utils/nanddump.c
+++ mtd-utils-2.0.2/nand-utils/nanddump.c
@@ -54,6 +54,9 @@ static void display_help(int status)
 "-s addr    --startaddress=addr  Start address\n"
 "           --skip-bad-blocks-to-start\n"
 "                                Skip bad blocks when seeking to the start address\n"
+#ifdef ZYXEL_BAD_BLOCK_WORKAROUND
+"-g         --geteccbadblockinfo Get partition of ECC and bad block information\n"
+#endif
 "\n"
 "--bb=METHOD, where METHOD can be `padbad', `dumpbad', or `skipbad':\n"
 "    padbad:  dump flash data, substituting 0xFF for any bad blocks\n"
@@ -89,6 +92,9 @@ static bool			quiet = false;		// suppres
 static bool			canonical = false;	// print nice + ascii
 static bool			forcebinary = false;	// force printing binary to tty
 static bool			skip_bad_blocks_to_start = false;
+#ifdef ZYXEL_BAD_BLOCK_WORKAROUND
+static bool			geteccbadblockinfo = false;	// Get partition of ECC and bad block information
+#endif
 
 static enum {
 	padbad,   // dump flash data, substituting 0xFF for any bad blocks
@@ -103,7 +109,11 @@ static void process_options(int argc, ch
 
 	for (;;) {
 		int option_index = 0;
+#ifdef ZYXEL_BAD_BLOCK_WORKAROUND
+		static const char short_options[] = "hs:f:l:opqncaVg";
+#else
 		static const char short_options[] = "hs:f:l:opqncaV";
+#endif
 		static const struct option long_options[] = {
 			{"version", no_argument, 0, 'V'},
 			{"bb", required_argument, 0, 0},
@@ -119,6 +129,9 @@ static void process_options(int argc, ch
 			{"length", required_argument, 0, 'l'},
 			{"noecc", no_argument, 0, 'n'},
 			{"quiet", no_argument, 0, 'q'},
+#ifdef ZYXEL_BAD_BLOCK_WORKAROUND
+			{"geteccbadblockinfo", no_argument, 0, 'g'},
+#endif
 			{0, 0, 0, 0},
 		};
 
@@ -193,6 +206,11 @@ static void process_options(int argc, ch
 			case 'h':
 				display_help(EXIT_SUCCESS);
 				break;
+#ifdef ZYXEL_BAD_BLOCK_WORKAROUND
+			case 'g':
+				geteccbadblockinfo = true;
+				break;
+#endif
 			case '?':
 				error++;
 				break;
@@ -398,6 +416,14 @@ int main(int argc, char * const argv[])
 		goto closeall;
 	}
 
+#ifdef ZYXEL_BAD_BLOCK_WORKAROUND
+	/* Get Ecc and bad block information */
+	if (geteccbadblockinfo) {
+		fprintf(stderr, "Only to get partition of ECC and bad block information !\n");
+		goto closeall;
+	}
+#endif
+
 	/* Initialize start/end addresses and block size */
 	if (start_addr & (mtd.min_io_size - 1)) {
 		fprintf(stderr, "the start address (-s parameter) is not page-aligned!\n"
